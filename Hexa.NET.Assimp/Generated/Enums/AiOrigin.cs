// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	/// <summary>
	/// ----------------------------------------------------------------------------------<br/>
	/// Seek origins (for the virtual file system API).<br/>
	/// Much cooler than using SEEK_SET, SEEK_CUR or SEEK_END.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "aiOrigin")]
	[Flags]
	public enum AiOrigin : int
	{
		/// <summary>
		/// Beginning of the file <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiOrigin_SET")]
		[NativeName(NativeNameType.Value, "0")]
		Set = unchecked(0),

		/// <summary>
		/// Current position of the file pointer <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiOrigin_CUR")]
		[NativeName(NativeNameType.Value, "1")]
		Cur = unchecked(1),

		/// <summary>
		/// End of the file, offsets must be negative <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiOrigin_END")]
		[NativeName(NativeNameType.Value, "2")]
		End = unchecked(2),

		/// <summary>
		/// <br/>
		/// Force 32-bit size enum<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "_AI_ORIGIN_ENFORCE_ENUM_SIZE")]
		[NativeName(NativeNameType.Value, "2147483647")]
		EnforceEnumSize = unchecked(2147483647),
	}
}
