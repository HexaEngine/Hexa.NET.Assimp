// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	/// <summary>
	/// ---------------------------------------------------------------------------<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "aiPrimitiveType")]
	[Flags]
	public enum AiPrimitiveType : int
	{
		/// <summary>
		/// <br/>
		/// This is just a single vertex in the virtual world,<br/>
		/// #aiFace contains just one index for such a primitive.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiPrimitiveType_POINT")]
		[NativeName(NativeNameType.Value, "1")]
		Point = unchecked(1),

		/// <summary>
		/// <br/>
		/// This is a line defined through a start and an end position.<br/>
		/// #aiFace contains exactly two indices for such a primitive.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiPrimitiveType_LINE")]
		[NativeName(NativeNameType.Value, "2")]
		Line = unchecked(2),

		/// <summary>
		/// <br/>
		/// A triangle consists of three indices.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiPrimitiveType_TRIANGLE")]
		[NativeName(NativeNameType.Value, "4")]
		Triangle = unchecked(4),

		/// <summary>
		/// <br/>
		/// A triangle is a polygon, but polygon in this context means<br/>
		/// "all polygons that are not triangles". The "Triangulate"-Step<br/>
		/// is provided for your convenience, it splits all polygons in<br/>
		/// triangles (which are much easier to handle).<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiPrimitiveType_POLYGON")]
		[NativeName(NativeNameType.Value, "8")]
		Polygon = unchecked(8),

		/// <summary>
		/// <br/>
		/// NGON encoding is a special encoding that tells whether 2 or more consecutive triangles<br/>
		/// should be considered as a triangle fan. This is identified by looking at the first vertex index.<br/>
		/// 2 consecutive triangles with the same 1st vertex index are part of the same<br/>
		/// NGON.<br/>
		/// At the moment, only quads (concave or convex) are supported, meaning that polygons are 'seen' as<br/>
		/// triangles, as usual after a triangulation pass.<br/>
		/// To get an NGON encoded mesh, please use the aiProcess_Triangulate post process.<br/>
		/// <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiPrimitiveType_NGONEncodingFlag")]
		[NativeName(NativeNameType.Value, "16")]
		NgonEncodingFlag = unchecked(16),

		[NativeName(NativeNameType.EnumItem, "_aiPrimitiveType_Force32Bit")]
		[NativeName(NativeNameType.Value, "2147483647")]
		Force32Bit = unchecked(2147483647),
	}
}
