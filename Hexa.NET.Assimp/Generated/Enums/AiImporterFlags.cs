// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	/// <summary>
	/// Mixed set of flags for #aiImporterDesc, indicating some features<br/>
	/// common to many importers<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "aiImporterFlags")]
	[Flags]
	public enum AiImporterFlags : int
	{
		/// <summary>
		/// Indicates that there is a textual encoding of the<br/>
		/// file format; and that it is supported.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiImporterFlags_SupportTextFlavour")]
		[NativeName(NativeNameType.Value, "1")]
		SupportTextFlavour = unchecked(1),

		/// <summary>
		/// Indicates that there is a binary encoding of the<br/>
		/// file format; and that it is supported.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiImporterFlags_SupportBinaryFlavour")]
		[NativeName(NativeNameType.Value, "2")]
		SupportBinaryFlavour = unchecked(2),

		/// <summary>
		/// Indicates that there is a compressed encoding of the<br/>
		/// file format; and that it is supported.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiImporterFlags_SupportCompressedFlavour")]
		[NativeName(NativeNameType.Value, "4")]
		SupportCompressedFlavour = unchecked(4),

		/// <summary>
		/// Indicates that the importer reads only a very particular<br/>
		/// subset of the file format. This happens commonly for<br/>
		/// declarative or procedural formats which cannot easily<br/>
		/// be mapped to #aiScene <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiImporterFlags_LimitedSupport")]
		[NativeName(NativeNameType.Value, "8")]
		LimitedSupport = unchecked(8),

		/// <summary>
		/// Indicates that the importer is highly experimental and<br/>
		/// should be used with care. This only happens for trunk<br/>
		/// (i.e. SVN) versions, experimental code is not included<br/>
		/// in releases. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiImporterFlags_Experimental")]
		[NativeName(NativeNameType.Value, "16")]
		Experimental = unchecked(16),
	}
}
