// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	/// <summary>
	/// ---------------------------------------------------------------------------<br/>
	/// <br/>
	/// Usually you'll instruct your cg artists how textures have to look like ...<br/>
	/// and how they will be processed in your application. However, if you use<br/>
	/// Assimp for completely generic loading purposes you might also need to<br/>
	/// process these flags in order to display as many 'unknown' 3D models as<br/>
	/// possible correctly.<br/>
	/// This corresponds to the #AI_MATKEY_TEXFLAGS property.<br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "aiTextureFlags")]
	[Flags]
	public enum AiTextureFlags : int
	{
		/// <summary>
		/// The texture's color values have to be inverted (component-wise 1-n)<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiTextureFlags_Invert")]
		[NativeName(NativeNameType.Value, "1")]
		Invert = unchecked(1),

		/// <summary>
		/// Explicit request to the application to process the alpha channel<br/>
		/// of the texture.<br/>
		/// Mutually exclusive with #aiTextureFlags_IgnoreAlpha. These<br/>
		/// flags are set if the library can say for sure that the alpha<br/>
		/// channel is used/is not used. If the model format does not<br/>
		/// define this, it is left to the application to decide whether<br/>
		/// the texture alpha channel - if any - is evaluated or not.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiTextureFlags_UseAlpha")]
		[NativeName(NativeNameType.Value, "2")]
		UseAlpha = unchecked(2),

		/// <summary>
		/// Explicit request to the application to ignore the alpha channel<br/>
		/// of the texture.<br/>
		/// Mutually exclusive with #aiTextureFlags_UseAlpha.<br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "aiTextureFlags_IgnoreAlpha")]
		[NativeName(NativeNameType.Value, "4")]
		IgnoreAlpha = unchecked(4),

		[NativeName(NativeNameType.EnumItem, "_aiTextureFlags_Force32Bit")]
		[NativeName(NativeNameType.Value, "2147483647")]
		Force32Bit = unchecked(2147483647),
	}
}
