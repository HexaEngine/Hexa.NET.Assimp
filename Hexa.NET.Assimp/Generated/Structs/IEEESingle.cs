// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	/// <summary>
	/// ---------------------------------------------------------------------------<br/>
	/// Data structure to represent the bit pattern of a 32 Bit<br/>
	/// IEEE 754 floating-point number. <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "_IEEESingle")]
	[StructLayout(LayoutKind.Explicit)]
	public partial struct IEEESingle
	{
		[NativeName(NativeNameType.StructOrClass, "_IEEESingle::")]
		[StructLayout(LayoutKind.Sequential)]
		public partial struct IEEEUnion
		{
			[NativeName(NativeNameType.Field, "Frac")]
			[NativeName(NativeNameType.Type, "uint32_t")]
			public uint Frac;
			[NativeName(NativeNameType.Field, "Exp")]
			[NativeName(NativeNameType.Type, "uint32_t")]
			public uint Exp;
			[NativeName(NativeNameType.Field, "Sign")]
			[NativeName(NativeNameType.Type, "uint32_t")]
			public uint Sign;

			public unsafe IEEEUnion(uint frac = default, uint exp = default, uint sign = default)
			{
				Frac = frac;
				Exp = exp;
				Sign = sign;
			}


		}

		[NativeName(NativeNameType.Field, "Float")]
		[NativeName(NativeNameType.Type, "float")]
		[FieldOffset(0)]
		public float Float;
		[NativeName(NativeNameType.Field, "IEEE")]
		[NativeName(NativeNameType.Type, "")]
		[FieldOffset(0)]
		public IEEEUnion IEEE;

		public unsafe IEEESingle(float @float = default, IEEEUnion ieee = default)
		{
			Float = @float;
			IEEE = ieee;
		}


	}

}
