// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	/// <summary>
	/// ---------------------------------------------------------------------------<br/>
	/// Binds a morph anim mesh to a specific point in time. <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "aiMeshMorphKey")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct AiMeshMorphKey
	{
		/// <summary>
		/// The time of this key <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mTime")]
		[NativeName(NativeNameType.Type, "double")]
		public double MTime;

		/// <summary>
		/// The values and weights at the time of this key<br/>
		/// - mValues: index of attachment mesh to apply weight at the same position in mWeights<br/>
		/// - mWeights: weight to apply to the blend shape index at the same position in mValues<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mValues")]
		[NativeName(NativeNameType.Type, "unsigned int *")]
		public unsafe uint* MValues;

		[NativeName(NativeNameType.Field, "mWeights")]
		[NativeName(NativeNameType.Type, "double *")]
		public unsafe double* MWeights;
		/// <summary>
		/// The number of values and weights <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mNumValuesAndWeights")]
		[NativeName(NativeNameType.Type, "unsigned int")]
		public uint MNumValuesAndWeights;


		public unsafe AiMeshMorphKey(double mTime = default, uint* mValues = default, double* mWeights = default, uint mNumValuesAndWeights = default)
		{
			MTime = mTime;
			MValues = mValues;
			MWeights = mWeights;
			MNumValuesAndWeights = mNumValuesAndWeights;
		}


	}

}
