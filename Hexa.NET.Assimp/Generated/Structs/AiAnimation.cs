// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	/// <summary>
	/// ---------------------------------------------------------------------------<br/>
	/// An animation consists of key-frame data for a number of nodes. For<br/>
	/// each node affected by the animation a separate series of data is given.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "aiAnimation")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct AiAnimation
	{
		/// <summary>
		/// The name of the animation. If the modeling package this data was<br/>
		/// exported from does support only a single animation channel, this<br/>
		/// name is usually empty (length is zero). <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mName")]
		[NativeName(NativeNameType.Type, "aiString")]
		public AiString MName;

		/// <summary>
		/// Duration of the animation in ticks.  <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mDuration")]
		[NativeName(NativeNameType.Type, "double")]
		public double MDuration;

		/// <summary>
		/// Ticks per second. 0 if not specified in the imported file <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mTicksPerSecond")]
		[NativeName(NativeNameType.Type, "double")]
		public double MTicksPerSecond;

		/// <summary>
		/// The number of bone animation channels. Each channel affects<br/>
		/// a single node. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mNumChannels")]
		[NativeName(NativeNameType.Type, "unsigned int")]
		public uint MNumChannels;

		/// <summary>
		/// The node animation channels. Each channel affects a single node.<br/>
		/// The array is mNumChannels in size. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mChannels")]
		[NativeName(NativeNameType.Type, "aiNodeAnim * *")]
		public unsafe AiNodeAnim** MChannels;

		/// <summary>
		/// The number of mesh animation channels. Each channel affects<br/>
		/// a single mesh and defines vertex-based animation. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mNumMeshChannels")]
		[NativeName(NativeNameType.Type, "unsigned int")]
		public uint MNumMeshChannels;

		/// <summary>
		/// The mesh animation channels. Each channel affects a single mesh.<br/>
		/// The array is mNumMeshChannels in size. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mMeshChannels")]
		[NativeName(NativeNameType.Type, "aiMeshAnim * *")]
		public unsafe AiMeshAnim** MMeshChannels;

		/// <summary>
		/// The number of mesh animation channels. Each channel affects<br/>
		/// a single mesh and defines morphing animation. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mNumMorphMeshChannels")]
		[NativeName(NativeNameType.Type, "unsigned int")]
		public uint MNumMorphMeshChannels;

		/// <summary>
		/// The morph mesh animation channels. Each channel affects a single mesh.<br/>
		/// The array is mNumMorphMeshChannels in size. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mMorphMeshChannels")]
		[NativeName(NativeNameType.Type, "aiMeshMorphAnim * *")]
		public unsafe AiMeshMorphAnim** MMorphMeshChannels;


		public unsafe AiAnimation(AiString mName = default, double mDuration = default, double mTicksPerSecond = default, uint mNumChannels = default, AiNodeAnim** mChannels = default, uint mNumMeshChannels = default, AiMeshAnim** mMeshChannels = default, uint mNumMorphMeshChannels = default, AiMeshMorphAnim** mMorphMeshChannels = default)
		{
			MName = mName;
			MDuration = mDuration;
			MTicksPerSecond = mTicksPerSecond;
			MNumChannels = mNumChannels;
			MChannels = mChannels;
			MNumMeshChannels = mNumMeshChannels;
			MMeshChannels = mMeshChannels;
			MNumMorphMeshChannels = mNumMorphMeshChannels;
			MMorphMeshChannels = mMorphMeshChannels;
		}


	}

}
