// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	/// <summary>
	/// ---------------------------------------------------------------------------<br/>
	/// <br/>
	/// This is just a helper structure for the #AI_MATKEY_UVTRANSFORM key.<br/>
	/// See its documentation for more details.<br/>
	/// Typically you'll want to build a matrix of this information. However,<br/>
	/// we keep separate scaling/translation/rotation values to make it<br/>
	/// easier to process and optimize UV transformations internally.<br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "aiUVTransform")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct AiUVTransform
	{
		/// <summary>
		/// Translation on the u and v axes.<br/>
		/// The default value is (0|0).<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mTranslation")]
		[NativeName(NativeNameType.Type, "aiVector2D")]
		public Vector2 MTranslation;

		/// <summary>
		/// Scaling on the u and v axes.<br/>
		/// The default value is (1|1).<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mScaling")]
		[NativeName(NativeNameType.Type, "aiVector2D")]
		public Vector2 MScaling;

		/// <summary>
		/// Rotation - in counter-clockwise direction.<br/>
		/// The rotation angle is specified in radians. The<br/>
		/// rotation center is 0.5f|0.5f. The default value<br/>
		/// 0.f.<br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "mRotation")]
		[NativeName(NativeNameType.Type, "ai_real")]
		public double MRotation;


		public unsafe AiUVTransform(Vector2 mTranslation = default, Vector2 mScaling = default, double mRotation = default)
		{
			MTranslation = mTranslation;
			MScaling = mScaling;
			MRotation = mRotation;
		}


	}

}
