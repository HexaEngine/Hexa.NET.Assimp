// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.Assimp
{
	public unsafe partial class Assimp
	{
		internal static FunctionTable funcTable;

		/// <summary>
		/// Initializes the function table, automatically called. Do not call manually, only after <see cref="FreeApi"/>.
		/// </summary>
		public static void InitApi()
		{
			funcTable = new FunctionTable(LibraryLoader.LoadLibrary(GetLibraryName, null), 129);
			funcTable.Load(0, "aiGetImporterDesc");
			funcTable.Load(1, "aiGetExportFormatCount");
			funcTable.Load(2, "aiGetExportFormatDescription");
			funcTable.Load(3, "aiReleaseExportFormatDescription");
			funcTable.Load(4, "aiCopyScene");
			funcTable.Load(5, "aiFreeScene");
			funcTable.Load(6, "aiExportScene");
			funcTable.Load(7, "aiExportSceneEx");
			funcTable.Load(8, "aiExportSceneToBlob");
			funcTable.Load(9, "aiReleaseExportBlob");
			funcTable.Load(10, "aiImportFile");
			funcTable.Load(11, "aiImportFileEx");
			funcTable.Load(12, "aiImportFileExWithProperties");
			funcTable.Load(13, "aiImportFileFromMemory");
			funcTable.Load(14, "aiImportFileFromMemoryWithProperties");
			funcTable.Load(15, "aiApplyPostProcessing");
			funcTable.Load(16, "aiGetPredefinedLogStream");
			funcTable.Load(17, "aiAttachLogStream");
			funcTable.Load(18, "aiEnableVerboseLogging");
			funcTable.Load(19, "aiDetachLogStream");
			funcTable.Load(20, "aiDetachAllLogStreams");
			funcTable.Load(21, "aiReleaseImport");
			funcTable.Load(22, "aiGetErrorString");
			funcTable.Load(23, "aiIsExtensionSupported");
			funcTable.Load(24, "aiGetExtensionList");
			funcTable.Load(25, "aiGetMemoryRequirements");
			funcTable.Load(26, "aiGetEmbeddedTexture");
			funcTable.Load(27, "aiCreatePropertyStore");
			funcTable.Load(28, "aiReleasePropertyStore");
			funcTable.Load(29, "aiSetImportPropertyInteger");
			funcTable.Load(30, "aiSetImportPropertyFloat");
			funcTable.Load(31, "aiSetImportPropertyString");
			funcTable.Load(32, "aiSetImportPropertyMatrix");
			funcTable.Load(33, "aiCreateQuaternionFromMatrix");
			funcTable.Load(34, "aiDecomposeMatrix");
			funcTable.Load(35, "aiTransposeMatrix4");
			funcTable.Load(36, "aiTransposeMatrix3");
			funcTable.Load(37, "aiTransformVecByMatrix3");
			funcTable.Load(38, "aiTransformVecByMatrix4");
			funcTable.Load(39, "aiMultiplyMatrix4");
			funcTable.Load(40, "aiMultiplyMatrix3");
			funcTable.Load(41, "aiIdentityMatrix3");
			funcTable.Load(42, "aiIdentityMatrix4");
			funcTable.Load(43, "aiGetImportFormatCount");
			funcTable.Load(44, "aiGetImportFormatDescription");
			funcTable.Load(45, "aiVector2AreEqual");
			funcTable.Load(46, "aiVector2AreEqualEpsilon");
			funcTable.Load(47, "aiVector2Add");
			funcTable.Load(48, "aiVector2Subtract");
			funcTable.Load(49, "aiVector2Scale");
			funcTable.Load(50, "aiVector2SymMul");
			funcTable.Load(51, "aiVector2DivideByScalar");
			funcTable.Load(52, "aiVector2DivideByVector");
			funcTable.Load(53, "aiVector2Length");
			funcTable.Load(54, "aiVector2SquareLength");
			funcTable.Load(55, "aiVector2Negate");
			funcTable.Load(56, "aiVector2DotProduct");
			funcTable.Load(57, "aiVector2Normalize");
			funcTable.Load(58, "aiVector3AreEqual");
			funcTable.Load(59, "aiVector3AreEqualEpsilon");
			funcTable.Load(60, "aiVector3LessThan");
			funcTable.Load(61, "aiVector3Add");
			funcTable.Load(62, "aiVector3Subtract");
			funcTable.Load(63, "aiVector3Scale");
			funcTable.Load(64, "aiVector3SymMul");
			funcTable.Load(65, "aiVector3DivideByScalar");
			funcTable.Load(66, "aiVector3DivideByVector");
			funcTable.Load(67, "aiVector3Length");
			funcTable.Load(68, "aiVector3SquareLength");
			funcTable.Load(69, "aiVector3Negate");
			funcTable.Load(70, "aiVector3DotProduct");
			funcTable.Load(71, "aiVector3CrossProduct");
			funcTable.Load(72, "aiVector3Normalize");
			funcTable.Load(73, "aiVector3NormalizeSafe");
			funcTable.Load(74, "aiVector3RotateByQuaternion");
			funcTable.Load(75, "aiMatrix3FromMatrix4");
			funcTable.Load(76, "aiMatrix3FromQuaternion");
			funcTable.Load(77, "aiMatrix3AreEqual");
			funcTable.Load(78, "aiMatrix3AreEqualEpsilon");
			funcTable.Load(79, "aiMatrix3Inverse");
			funcTable.Load(80, "aiMatrix3Determinant");
			funcTable.Load(81, "aiMatrix3RotationZ");
			funcTable.Load(82, "aiMatrix3FromRotationAroundAxis");
			funcTable.Load(83, "aiMatrix3Translation");
			funcTable.Load(84, "aiMatrix3FromTo");
			funcTable.Load(85, "aiMatrix4FromMatrix3");
			funcTable.Load(86, "aiMatrix4FromScalingQuaternionPosition");
			funcTable.Load(87, "aiMatrix4Add");
			funcTable.Load(88, "aiMatrix4AreEqual");
			funcTable.Load(89, "aiMatrix4AreEqualEpsilon");
			funcTable.Load(90, "aiMatrix4Inverse");
			funcTable.Load(91, "aiMatrix4Determinant");
			funcTable.Load(92, "aiMatrix4IsIdentity");
			funcTable.Load(93, "aiMatrix4DecomposeIntoScalingEulerAnglesPosition");
			funcTable.Load(94, "aiMatrix4DecomposeIntoScalingAxisAnglePosition");
			funcTable.Load(95, "aiMatrix4DecomposeNoScaling");
			funcTable.Load(96, "aiMatrix4FromEulerAngles");
			funcTable.Load(97, "aiMatrix4RotationX");
			funcTable.Load(98, "aiMatrix4RotationY");
			funcTable.Load(99, "aiMatrix4RotationZ");
			funcTable.Load(100, "aiMatrix4FromRotationAroundAxis");
			funcTable.Load(101, "aiMatrix4Translation");
			funcTable.Load(102, "aiMatrix4Scaling");
			funcTable.Load(103, "aiMatrix4FromTo");
			funcTable.Load(104, "aiQuaternionFromEulerAngles");
			funcTable.Load(105, "aiQuaternionFromAxisAngle");
			funcTable.Load(106, "aiQuaternionFromNormalizedQuaternion");
			funcTable.Load(107, "aiQuaternionAreEqual");
			funcTable.Load(108, "aiQuaternionAreEqualEpsilon");
			funcTable.Load(109, "aiQuaternionNormalize");
			funcTable.Load(110, "aiQuaternionConjugate");
			funcTable.Load(111, "aiQuaternionMultiply");
			funcTable.Load(112, "aiQuaternionInterpolate");
			funcTable.Load(113, "aiTextureTypeToString");
			funcTable.Load(114, "aiGetMaterialProperty");
			funcTable.Load(115, "aiGetMaterialFloatArray");
			funcTable.Load(116, "aiGetMaterialIntegerArray");
			funcTable.Load(117, "aiGetMaterialColor");
			funcTable.Load(118, "aiGetMaterialUVTransform");
			funcTable.Load(119, "aiGetMaterialString");
			funcTable.Load(120, "aiGetMaterialTextureCount");
			funcTable.Load(121, "aiGetMaterialTexture");
			funcTable.Load(122, "aiGetLegalString");
			funcTable.Load(123, "aiGetVersionPatch");
			funcTable.Load(124, "aiGetVersionMinor");
			funcTable.Load(125, "aiGetVersionMajor");
			funcTable.Load(126, "aiGetVersionRevision");
			funcTable.Load(127, "aiGetBranchName");
			funcTable.Load(128, "aiGetCompileFlags");
		}

		public static void FreeApi()
		{
			funcTable.Free();
		}
	}
}
